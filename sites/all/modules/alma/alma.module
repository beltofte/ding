<?php
// $Id$

/**
 * @file alma.module
 * Drupal module implementing Axiell ABs Alma API.
 */

/**
 * Implementation of hook_menu().
 */
function alma_menu() {
  $items = array();

  $items['admin/settings/alma'] = array(
    'title' => 'Axiell Alma',
    'description' => 'Settings for the Alma module',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('alma_admin_settings_form'),
    'access arguments' => array('administer site configuration'),
    'file' => 'alma.admin.inc',
  );

  $items['admin/settings/alma/main'] = array(
    'title' => 'Alma',
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );

  return $items;
}

/**
 * Implementation of hook_requirements().
 */
function alma_requirements($phase) {
  $requirements = array();
  // Ensure translations don't break at install time.
  $t = get_t();

  if (!function_exists('simplexml_load_string')) {
    $requirements['simplexml'] = array(
      'title' => 'SimpleXML',
      'description' => $t('The Alma module requires SimpleXML to function. Please install and/or enable SimpleXML in your PHP configuration.'),
      'severity' => REQUIREMENT_ERROR,
    );
  }

  return $requirements;
}

/**
 * Return a fully instantiated AlmaClient instance.
 */
function alma_client() {
  // This is basically a singleton. We also wait until right before
  // instantiating to include our required classes. That seems like a
  // decent performance tradeoff instead of loading everything on every
  // page load.
  static $client;
  if (!isset($client)) {
    $path = drupal_get_path('module', 'alma');
    include($path . '/lib/AlmaClient/AlmaClient.class.php');
    $client = new AlmaClient(variable_get('alma_base_url', ''));
  }
  return $client;
}

function alma_client_get_branches() {
  try {
    return alma_client()->get_branches();
  } catch (Exception $e) {
    return array();
  }
}

function alma_client_get_reservation_branches() {
  try {
    return alma_client()->get_reservation_branches();
  } catch (Exception $e) {
    return array();
  }
}

function alma_client_get_patron_info($borr_card, $pin_code) {
  try {
    return alma_client()->get_patron_info($borr_card, $pin_code);
  } catch (Exception $e) {
    dpm($e->getMessage());
    return FALSE;
  }
}

