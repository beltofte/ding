<?php
// $Id$

/**
 * Implementation of hook_menu().
 */
function alma_cart_menu() {
  $items = array();

  $items['alma/cart/add/%'] = array(
    'title' => 'Add item to cart',
    'page callback' => 'alma_cart_page_add_to_cart',
    'page arguments' => array(3),
    'access arguments' => array('access content'),
    'file' => 'alma_cart.pages.inc',
    'type' => MENU_CALLBACK,
  );

  $items['alma/cart/reserve/%'] = array(
    'title' => 'Reserve item',
    'page callback' => 'alma_cart_page_reserve_item',
    'page arguments' => array(3),
    'access arguments' => array('access content'),
    'file' => 'alma_cart.pages.inc',
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implementation of hook_theme().
 */
function alma_cart_theme($existing, $type, $theme, $path) {
  return array(
    'alma_cart_item' => array(
      'arguments' => array('item' => NULL),
      'file' => 'alma_cart.theme.inc',
    ),
    'alma_cart_reservation_buttons' => array(
      'arguments' => array('object' => NULL),
      'file' => 'alma_cart.theme.inc',
    ),
    'alma_cart_forms_cart_details' => array(
      'arguments' => array('form' => NULL),
    ),
  );
}

/**
 * Implementation of hook_ctools_plugin_api().
 */
function alma_cart_ctools_plugin_api($module, $api) {
  if ($module == 'page_manager' && $api == 'pages_default') {
    return array('version' => 1);
  }
}

/**
 * Implementation of hook_ctools_plugin_directory().
 *
 * Tells CTools (and thus Panels) where to look for plugin code.
 */
function alma_cart_ctools_plugin_directory($module, $plugin) {
  if ($module == 'ctools' || $module == 'panels') {
    return 'plugins/' . $plugin;
  }
}

/**
 * Helper function to add a TingClientObject to the Alma cart.
 *
 * @param TingClientObject $object
 * @return mixed
 *    The return value of drupal_write_record for the cart item.
 */
function alma_cart_add_ting_object($object) {
  // Create an array of the item to save.
  $cart_item = array(
    'uid' => $GLOBALS['user']->uid,
    'alma_id' => $object->data->localId,
    'ting_id' => $object->id,
    'created' => $_SERVER['REQUEST_TIME'],
    'title' => $object->data->title[0],
    'author' => $object->data->creator[0],
    'type' => $object->data->type[0],
    'thumbnail_url' => $object->additionalInformation->thumbnailUrl,
  );

  // Save the item to the cart table.
  return drupal_write_record('alma_cart', $cart_item);
}

/**
 * Get cart item count for user.
 *
 * @param stdClass $account
 *    User object.
 * return integer
 *    Item count.
 */
function alma_cart_user_count($account) {
  return db_result(db_query("SELECT COUNT(alma_id) FROM {alma_cart} WHERE uid = %d", $account->uid));
}

/**
 * Theme function for Alma cart form.
 *
 * This has to be in the module file to get loaded properly. The theme 
 * system's support for external files is still lacking for preprocess 
 * hooks and overriding theme functions.
 */
function theme_alma_cart_forms_cart_details($form) {
  $header = array(t('Select'), t('Title'), t('Wait time'));
  $rows = array();
  $output = '';

  foreach ($form['cart_data']['#value'] as $item) {
    $rows[] = array(
      drupal_render($form['cart'][$item['alma_id']]),
      theme('alma_cart_item', $item),
      '~0.25E-3 millenia', // TODO: Wait time not implemented yet.
    );
  }

  if (empty($rows)) {
    return t('The cart is empty.');
  }

  $output .= theme('table', $header, $rows);
  $output .= drupal_render($form);
  return $output;
}

/**
 * Detect if a request wants a JSON-response, usually for AHAH.
 */
function alma_cart_detect_ahah() {
  return (isset($_SERVER['HTTP_ACCEPT']) && (strpos($_SERVER['HTTP_ACCEPT'], 'application/json')) || (strpos($_SERVER['HTTP_ACCEPT'], 'text/javascript')));
}

