<?php
// $Id$

/**
 * @file ding_slug.module
 * Handles the generation and loading of nodes from "slugs", 
 * small bits of text, suitable for use in URLs.
 */

/**
 * Implementation of hook_nodeapi().
 */
function ding_slug_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL) {
  if ($node->type == 'library') {
    switch ($op) {
      case 'load':
        $node->ding_slug = db_result(db_query("SELECT slug FROM {ding_slug} WHERE nid=%d", $node->nid));
      break;
    }
  }
}

/**
 * Implementation of hook_ctools_arguments().
 */
function ding_slug_ctools_arguments() {
  $args = array();
  $args['ding_slug'] = array(
    'title' => t('Ding slug'),
    'keyword' => 'node', // TODO: What is this?
    'description' => t('Finds the node context based on the "slug" name for it.'),
    'context' => 'ding_slug_library_context',
  );
  return $args;
}

/**
 * Implementation of hook_token_list().
 */
function ding_slug_token_list($type = 'all') {
  if ($type == 'node' || $type == 'all') {
    $tokens = array();
    $tokens['node']['ding_slug'] = t('Slug for the current node');
    $tokens['node']['ding_library_slug'] = t('Slug for the library');
    return $tokens;
  }
}

/**
 * Implementation of hook_token_values().
 */
function ding_slug_token_values($type, $object = NULL, $options = array()) {
  if ($type == 'node') {
    $node = $object;
    $tokens = array();

    // If node has a slug, use that.
    if (isset($node->ding_slug)) {
      $tokens['ding_slug'] = check_plain($node->ding_slug);
      // For the library node, the library slug is their own.
      if ($node->type == 'library') {
        $tokens['ding_library_slug'] = check_plain($node->ding_slug);
      }
    }
    // If it has no slug, return the node id.
    else {
      $tokens['ding_slug'] = $node->nid;
    }

    // If we didn't set the library slug above, try looking it up.
    if (!isset($tokens['ding_library_slug'])) {
      // Look up the slug of the related library.
      if (isset($node->field_library_ref[0]['nid']) && !empty($node->field_library_ref[0]['nid'])) {
        $slug = db_result(db_query("SELECT slug FROM {ding_slug} WHERE nid = %d LIMIT 1;", $node->field_library_ref[0]['nid']));
        if ($slug) {
          $tokens['ding_library_slug'] = check_plain($slug);
        }
        // If the related library doesn't have a slug, return its nid.
        else {
          $tokens['ding_library_slug'] = $node->field_library_ref[0]['nid'];
        }
      }
    }
    return $tokens;
  }
}

/**
 * Lookup an argument to see if it corresponds to a library.
 */
function ding_slug_library_context($arg = NULL, $conf = NULL, $empty = FALSE) {
  // If unset it wants a generic, unfilled context.
  if ($empty) {
    return ctools_context_create_empty('node');
  }

  // We can accept either a node object or a pure nid.
  if (is_object($arg)) {
    return ctools_context_create('node', $arg);
  }

  // Cast argument to an integer to see if it looks like a node ID.
  $num = intval($arg);
  if (is_numeric($num) && $num > 0) {
    $nid = $num;
  }
  // Try looking up the argument as a slug
  elseif (strlen($arg) > 1) {
    $nid = db_result(db_query("SELECT nid FROM {ding_slug} WHERE slug='%s'", $arg));
  }
  else {
    return FALSE;
  }

  if (!$nid || !is_numeric($nid)) {
    return FALSE;
  }

  $node = node_load($nid);
  if (!$node) {
    return FALSE;
  }

  ding_breadcrumbs_set_library($node);
  return ctools_context_create('node', $node);
}

/**
 * Slugify a piece of text, ie. make it ready for use in URLs.
 *
 * @param string $input
 *      Text to slugify.
 */
function ding_slug_slugify($input) {
  if (module_exists('transliteration')) {
    // Transliterate all letters down to ASCII
    $output = transliteration_get($input, '-', 'da');
  }
  else {
    $output = $input;
  }

  // Remove all characters that are not lowercase alphanumeric.
  $output = preg_replace('/[^a-z0-9]+/', '-', drupal_strtolower($output));
  // Remove dashes at the end of the string
  $output = preg_replace('/-+$/', '', $output);
  return $output;
}

/**
 * Get a library slug by the corresponding node ID
 *
 * @param integer $nid
 *    The node ID.
 * @return string
 *    The slug matching the node.
 */
function ding_slug_get_by_nid($nid) {
  $slug = db_result(db_query("SELECT slug FROM {ding_slug} WHERE nid=%d;", $nid));
  return $slug;
}

