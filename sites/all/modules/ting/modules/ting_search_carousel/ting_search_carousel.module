<?php
// $Id$

/**
 * Implementation of hook_menu().
 */
function ting_search_carousel_menu() {
  $path = drupal_get_path('module', 'ting_search_carousel');
  $items = array();

  $items['admin/settings/ting_search_carousel'] = array(
    'title' => 'Ting search carousel',
    'page callback' => 'ting_search_carousel_admin_page',
    'access arguments' => array('administer search carousel'),
    'file' => 'ting_search_carousel.admin.inc',
    'file path' => $path,
  );
  
  $items['admin/settings/ting_search_carousel/form/ahah'] = array(
    'title' => 'Edit search carousels',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ting_search_carousel_form_ahah'),
    'access arguments' => array('administer search carousel'),
  	'file' => 'ting_search_carousel.admin.inc',
    'type' => MENU_CALLBACK,
  );

  $items['admin/settings/ting_search_carousel/js'] = array(
    'title' => 'Edit search carousels',
    'page callback' => 'ting_search_carousel_result_js',
    'file' => 'ting_search_carousel.pages.inc',
    'type' => MENU_CALLBACK,
  );
  
  return $items;
}

/**
 * Implementation of hook_perm().
 *
 * Since we are limiting the ability to create new nodes to certain users,
 * we need to define what those permissions are here. We also define a permission
 * to allow users to edit the nodes they created.
 */
function ting_search_carousel_perm() {
  return array(
    'administer search carousel'
  );
}

/**
 * Implementation of hook_theme().
 * 
 * This lets us tell Drupal about our theme functions and their arguments.
 */
function ting_search_carousel_theme() {
  return array(
    'ting_search_carousel' => array(
      'arguments' => array('searches' => NULL),
  		'template' => 'ting_search_carousel'
    ),
  	'ting_search_carousel_search' => array(
      'arguments' => array('element' => NULL),
    ),
  );
}

/**
 * Implementation of hook_ctools_plugin_directory().
 *
 * Tells CTools (and thus Panels) where to look for plugin code.
 */
function ting_search_carousel_ctools_plugin_directory($module, $plugin) {
  if ($module == 'ctools' || $module == 'panels') {
    return 'plugins/' . $plugin;
  }
}

/**
 * Theme function to format the our custom form element.
 *
 * We use the container-inline class so that all three of the HTML elements 
 * are placed next to each other, rather than on separate lines.
 */
function theme_ting_search_carousel_search($element) {
  return theme('form_element', $element, '<div class="ting-search-carousel-search-wrap">'. $element['#children'] .'</div>');
}


/**
 * Implementation of hook_elements().
 */
function ting_search_carousel_elements() {
  $types = array();
  $types['ting_search_carousel_search'] = array(
    '#input' => TRUE,
    '#process' => array('ting_search_carousel_search_element_process'),
    '#element_validate' => array('ting_search_carousel_search_element_validate'),
    '#default_value' => array(
      'delta' => 0,
      'title' => '',
  		'subtitle' => '',
  		'query' => '',
    ),
  );
  return $types;
}

/**
 * Process callback to expand our form element into several fields.
 */
function ting_search_carousel_search_element_process($element, $form_state) {
  $element['#tree'] = TRUE;

  if (!isset($element['#value'])) {
    $element['#value'] = $element['#default_value'];
  }
  else {
    $element['#value'] += $element['#default_value'];
  }

  $element['delta'] = array(
    '#type' => 'value',
    '#value' => (isset($element['#delta'])) ? $element['#delta'] : $element['#value']['delta'],
  );

  $element['title'] = array(
    '#type' => 'textfield',
    '#title' => t('Title'),
  	'#description' => t('The title of the search is used for the tab in the carousel. Keep it short.'),
  	'#default_value' => $element['#value']['title'],
  );
  
  $element['subtitle'] = array(
    '#type' => 'textfield',
    '#title' => t('subtitle'),
  	'#description' => t('The subtitle displayed next to the search results'),
    '#default_value' => $element['#value']['subtitle'],
  );
  $element['query'] = array(
    '#type' => 'textfield',
    '#title' => t('Query'),
    '#description' => t('The query to display search results for'),
  	'#default_value' => $element['#value']['query'],
  );
  $element['remove'] = array(
    '#type' => 'button',
  	'#submit' => FALSE,
  	'#value' => t('Remove'),
  	'#attributes' => array('class' => 'remove')  
	);
	
  return $element;
}

/**
 * Our element's validation function.
 */
function ting_search_carousel_search_element_validate($element, &$form_state) {
  return $form;
}

function ting_search_carousel_populate_searches($searches) {
	module_load_include('client.inc', 'ting');

	foreach ($searches as &$search)
	{
		$search['results'] = array();
		
		$i = 0;
		do {
			$result = ting_do_search($search['query'], ++$i, 10, array('facets' => array()));
			
			foreach ($result->collections as $collection)
			{
				if ($collection->objects[0]->additionalInformation->thumbnailUrl ||
          	$collection->objects[0]->additionalInformation->detailUrl)
				{
					$search['results'][] = $collection;
				}
			}
		} while (sizeof($search->results) < 6 && sizeof($result->collections) > 0);
	}
	
	return $searches;
}